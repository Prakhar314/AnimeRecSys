{"version":3,"sources":["components/AnimeCard.js","components/UseWindowSize.js","components/AnimeGrid.js","components/LoadingShar.js","components/Chip.js","components/ColoredSwitch.js","components/SearchSection.js","components/NavBar.js","components/BrowsePage.js","components/HomePage.js","store.js","components/AnimeInfo.js","components/CenterDiv.js","components/EditAnimeModal.js","components/AnimePage.js","components/AddAnimeModal.js","components/OverlayedImage.js","components/UserAnimeList.js","components/UserRecs.js","components/RecPage.js","App.js","reportWebVitals.js","index.js","components/tags.js"],"names":["AnimeCard","id","title","image","Card","style","border","marginBottom","textDecoration","to","Img","variant","src","objectFit","width","borderRadius","Body","padding","paddingTop","textAlign","marginLeft","marginRight","Subtitle","fontSize","fontWeight","overflowWrap","overflow","WebkitLineClamp","WebkitBoxOrient","display","useWindowSize","useState","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","AnimeGrid","anime","children","fluid","currentPage","setCurrentPage","itemsPerPage","contentSize","numPages","Math","ceil","length","itemStart","itemEnd","Container","Row","flexWrap","paddingLeft","paddingRight","minHeight","slice","map","a","Col","xs","md","lg","image_path","Pagination","className","Prev","onClick","x","disabled","Array","keys","i","Item","active","Next","LoadingShar","process","alt","Chip","text","tooltip","color","textSp","margin","lineHeight","backgroundColor","OverlayTrigger","placement","delay","show","hide","overlay","props","Tooltip","ColoredSwitch","value","onTap","selected","setSelected","newVal","s","SearchSection","onSuggest","loading","setLoading","expandTags","setExpandTags","incTags","setIncTags","excTags","setExcTags","setValue","valueRef","useRef","current","fetchSuggestions","debouncedLoadSuggestions","useCallback","debounce","query","console","log","axios","method","url","data","headers","then","res","Jumbotron","alignItems","justifyContent","InputGroup","size","maxWidth","FormControl","placeholder","aria-label","aria-describedby","onChange","event","target","Append","Button","Spinner","animation","marginTop","tags","popularTags","item","k","tagStore","list","filter","changeTags","NavBar","Navbar","collapseOnSelect","expand","bg","Brand","href","Toggle","aria-controls","Collapse","Nav","BrowsePage","setAnime","suggestions","setSuggestions","pingServer","get","timeout","catch","err","code","message","includes","setTimeout","InlineLink","open","HomePage","aboutVisible","setAboutVisible","position","top","right","state","aria-expanded","zIndex","left","transform","Fade","in","bottom","rel","initialState","userAnimeList","JSON","parse","localStorage","getItem","recsInSync","actionTypes","Object","freeze","ADD_ANIME","Symbol","REMOVE_ANIME","CLEAR","SYNC","store","createContext","Provider","StateProvider","useReducer","action","type","payload","Error","dispatch","stringify","setItem","getMPAA","mpaa","getGenre","genre","split","g","AnimeInfo","mpaa_rating","score","CenterDiv","EditAnimeModal","handleClose","globalDispatch","useContext","Modal","onHide","Header","closeButton","Title","classNames","count","isHalf","newValue","Footer","AnimePage","defaultImages","useMemo","cover","banner","useParams","images","setImages","React","setWidth","showAnimeModal","setShowAnimeModal","userScore","handleWindowResize","val","variables","post","result","Media","bannerImage","coverImage","large","details","boxShadow","title_japanese","title_english","synopsis","recommendations","AddAnimeModal","globalState","currentAnime","suggestion","setState","prevstate","searchInGlobal","animeAlreadyRated","paddingBottom","borderTop","borderBottom","cursor","OverlayedImage","UserAnimeList","onAddAnime","key","showModal","arrowLeft","arrowRight","arrowDisabledClass","hideSingleArrow","onSelect","prevState","error","errorMessage","progress","queue","reducer","numWait","UserRecs","pingForProgress","tries","withCredentials","status","response","ProgressBar","now","animated","minWidth","RecPage","addAnimeModal","setAddAnimeModal","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","exports"],"mappings":"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","file":"static/js/main.a2a5540f.chunk.js","sourcesContent":["import React from 'react'\nimport { Card } from \"react-bootstrap\";\nimport { Link } from 'react-router-dom';\n\nfunction AnimeCard({ id, title, image }) {\n    // console.log(id)\n    return (\n        <Card style={{ border: \"none\" ,marginBottom:\"1rem\"}}>\n            <Link style={{ textDecoration: \"none\" }} to={`/anime/${id}`}>\n                <Card.Img variant=\"top\" src={image} style={{ objectFit: \"cover\", width: \"100%\", borderRadius: \"5px\" }} />\n            </Link>\n            <Card.Body style={{ padding: \"10px\",paddingTop: \"1rem\", textAlign: \"center\", marginLeft: \"-10%\", marginRight: \"-10%\" }}>\n                <Card.Subtitle style={{\n                    fontSize: \"1rem\", fontWeight: \"bold\", overflowWrap: \"normal\", overflow: \"hidden\",\n                    WebkitLineClamp: 2,\n                    WebkitBoxOrient: \"vertical\",\n                    display: \"-webkit-box\"\n                }}>{title}</Card.Subtitle>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default AnimeCard\n","import { useState, useEffect } from 'react';\n\n// Hook\nfunction useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    \n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    \n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    \n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n\nexport default useWindowSize;","import React, { useState, useEffect} from 'react'\nimport { Container, Row, Col, Pagination } from \"react-bootstrap\"\nimport AnimeCard from \"./AnimeCard\"\nimport useWindowSize from \"./UseWindowSize\"\n\nfunction AnimeGrid({ anime, children, fluid }) {\n    const { width, height } = useWindowSize()\n\n    const [currentPage, setCurrentPage] = useState(1)\n    // xs\n    let itemsPerPage = 6\n    let contentSize = \"38rem\"\n    if (width >= 992) {\n        // lg\n        itemsPerPage = 6\n        contentSize = \"21rem\"\n    }\n    else if (width >= 768) {\n        // md\n        itemsPerPage = 4\n        contentSize = \"20rem\"\n    }\n    else if(width<=480){\n        contentSize = \"33rem\"\n    }\n\n    useEffect(() => {\n        if(currentPage>numPages && numPages!=0){\n            setCurrentPage(numPages)\n        }\n    }, [itemsPerPage])\n\n    const numPages = Math.ceil(anime.length / itemsPerPage)\n    const itemStart = (currentPage - 1) * itemsPerPage\n    const itemEnd = itemStart + itemsPerPage\n\n    return (\n        <Container fluid={fluid || false}>\n            {children}\n            <Row style={{ flexWrap: \"wrap\", paddingLeft: \"10px\", paddingRight: \"10px\", minHeight: contentSize }}>\n                {anime.slice(itemStart, itemEnd).map((a) => (<Col key={a.id} xs={4} md={3} lg={2} style={{ paddingLeft: \"10px\", paddingRight: \"10px\" }}>\n                    <AnimeCard id={a.id} title={a.title} image={a.image_path} />\n                </Col>))}\n            </Row>\n            <div style={{ display: \"flex\" }}>\n                <Pagination className=\"mx-auto\">\n                    <Pagination.Prev onClick={() => setCurrentPage(x => x - 1)} disabled={currentPage == 1} />\n                    {[...Array(numPages).keys()].map((i) =>\n                        <Pagination.Item key={i + 1} active={currentPage === i + 1} onClick={() => setCurrentPage(i + 1)}>{i + 1}</Pagination.Item>)}\n                    <Pagination.Next onClick={() => setCurrentPage(x => x + 1)} disabled={currentPage == numPages} />\n                </Pagination>\n            </div>\n        </Container>\n    )\n}\n\nexport default AnimeGrid\n","import React from 'react'\n\nfunction LoadingShar({height}) {\n    // console.log(height)\n    return (\n        <div style={{\n            textAlign: \"center\",\n            height: `${height||50}vh`,\n            padding: \"calc(25% - 50px)\"\n        }}>\n            <img src={process.env.PUBLIC_URL+\"/sharingan.gif\"} alt=\"Loading\" style={{borderRadius:\"100%\"}}></img>\n        </div>\n    )\n}\n\nexport default LoadingShar\n","import { React } from 'react'\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\n\n\nfunction Chip({ text, tooltip, color }) {\n    const renderTooltip = (props) => (\n        <Tooltip id=\"button-tooltip\" {...props}>\n            {tooltip}\n        </Tooltip>\n    );\n\n    const textSp = (<span style=\n        {{\n            display: \"inline-block\",\n            padding: \"0 14px\",\n            margin: \"2px\",\n            height: \"32px\",\n            lineHeight: \"30px\",\n            borderRadius: \"25px\",\n            backgroundColor: color || \"#F1F35B\",\n            color:\"rgba(20,20,20,0.25)\",\n            fontWeight:\"700\"\n        }}>\n        {text}\n    </span>)\n\n    return (\n        tooltip == null ?\n            <span>{textSp}</span>\n            :\n            <OverlayTrigger\n                placement=\"right\"\n                delay={{ show: 150, hide: 150 }}\n                overlay={renderTooltip}\n            >\n                {textSp}\n            </OverlayTrigger>\n    )\n}\n\nexport default Chip\n","import { React, useState } from 'react'\nimport Chip from './Chip'\n\nfunction getColor(value) {\n    if (value === 0 || value === 2) {\n        return \"lightgrey\"\n    }\n    if (value === 1) {\n        return \"springgreen\"\n    }\n    if (value === 3) {\n        return \"rgb(255, 71, 71)\"\n    }\n}\n\nfunction ColoredSwitch({ text, onTap }) {\n    const [selected, setSelected] = useState(0)\n    function switchValue() {\n        let newVal = selected+1\n        if (selected < 3) {\n            setSelected(s => s + 1)\n        }\n        else {\n            setSelected(s => 0)\n            newVal=0\n        }\n        onTap(newVal)\n    }\n    return (\n        <span onClick={switchValue}>\n            <Chip color={getColor(selected)} text={text} /></span>\n    )\n}\n\nexport default ColoredSwitch\n","import { React, useState, useCallback, useRef, useEffect } from 'react'\nimport debounce from 'lodash.debounce'\nimport axios from 'axios'\nimport { Jumbotron, Container, Spinner, InputGroup, FormControl, Button } from 'react-bootstrap';\nimport {tags,popularTags} from './tags'\nimport ColoredSwitch from './ColoredSwitch';\n\nexport default function SearchSection({ onSuggest }) {\n    const [loading, setLoading] = useState(false)\n    const [expandTags, setExpandTags] = useState(false)\n    const [incTags, setIncTags] = useState([])\n    const [excTags, setExcTags] = useState([])\n    const [value, setValue] = useState('')\n    const valueRef = useRef(value)\n    useEffect(() => {\n        valueRef.current = value\n    }, [value])\n    const loadSuggestions = (query) => {\n        console.log(\"fetching \" + query)\n        console.log(incTags)\n        console.log(excTags)\n        setLoading(true)\n        axios({\n            method: 'post',\n            url: `https://animerecsys.glitch.me/search/${query}/18`,\n            data: {\n                \"incgenre\": incTags,\n                \"excgenre\": excTags\n            },\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then((res) => {\n            console.log(\"fetching \" + query + \" \" + valueRef.current)\n            if (query === valueRef.current) {\n                setLoading(false)\n                onSuggest(res.data)\n                // console.log(res.data)\n            } else { // Ignore suggestions if input value changed\n                setLoading(true)\n            }\n        })\n    }\n\n    const onChange = (event) => {\n        setValue(event.target.value)\n        fetchSuggestions(event.target.value)\n    };\n\n    const clearInput =()=>{\n        setValue('')\n    }\n\n    const changeTags = (i, k) => {\n        console.log(incTags)\n        const tagStore = (expandTags?tags:popularTags)\n        if (k === 0) {\n            const list = excTags.filter((item) => item !== tagStore[i])\n            setExcTags(list)\n        }\n        if (k === 2) {\n            const list = incTags.filter((item) => item !== tagStore[i])\n            setIncTags(list)\n        }\n        if (k === 1) {\n            setIncTags([...incTags, tagStore[i]])\n        }\n        if (k === 3) {\n            setExcTags([...excTags, tagStore[i]])\n        }\n    }\n\n    const fetchSuggestions = (value) => {\n        debouncedLoadSuggestions(value);\n    };\n\n    const debouncedLoadSuggestions = useCallback(debounce(loadSuggestions, 1000), [excTags, incTags]);\n\n    return (\n\n        <Jumbotron style={{ minHeight: \"40vh\" }}>\n            <Container style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", }}>\n                <InputGroup size=\"lg\" style={{ maxWidth: \"400px\" }}>\n                    <FormControl\n                        placeholder=\"Jojo\"\n                        aria-label=\"Search...\"\n                        aria-describedby=\"basic-addon2\"\n                        onChange={onChange}\n                        value={value}\n                    />\n                    <InputGroup.Append>\n                        <Button variant=\"outline-secondary\" onClick={()=>clearInput()}> X </Button>\n                    </InputGroup.Append>\n                </InputGroup>\n                {loading && <Spinner style={{ marginLeft: \"1rem\" }} animation=\"grow\" />}\n            </Container>\n            <Container style={{ width: \"80%\", display: \"block\", textAlign: \"center\" }}>\n                <h5 style={{ fontWeight: 700, color: \"grey\", marginTop: \"1rem\" }}>Tags</h5>\n                {(expandTags?tags:popularTags).map((item, i) => <ColoredSwitch text={item} key={i} onTap={(k) => changeTags(i, k)} />)}\n                <Button style={{display:\"block\",marginTop:\"1rem\",marginLeft:\"auto\",marginRight:\"auto\"}} variant=\"outline-dark\" size=\"sm\" onClick={()=>setExpandTags(x=>!x)}>{expandTags?\"Less\":\"More\"}</Button>\n            </Container>\n\n        </Jumbotron>\n    )\n}\n\n","import React from 'react'\nimport { Navbar,Nav} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nfunction NavBar() {\n    return (\n        <Navbar collapseOnSelect expand=\"md\" bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"/\">AnimeRecSys</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"ml-auto\">\n                        <Link className=\"nav-link\" to=\"/browse\" >\n                        Browse\n                        </Link>\n                        <Link className=\"nav-link\" to=\"/recommend\" >\n                        Recommendations\n                        </Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default NavBar\n","import { React, useEffect, useState, useCallback } from 'react'\nimport { Container } from 'react-bootstrap'\nimport axios from 'axios'\nimport AnimeGrid from './AnimeGrid';\nimport LoadingShar from './LoadingShar';\nimport SearchSection from './SearchSection';\nimport NavBar from './NavBar';\n\nfunction BrowsePage() {\n    const [anime, setAnime] = useState([])\n    const [suggestions, setSuggestions] = useState([])\n    const pingServer = useCallback(\n        () => {\n            axios.get('https://animerecsys.glitch.me/', { timeout: 5000 }).then((res) => {\n                // console.log(res.data)\n                setAnime(res.data)\n            }).catch(err => {\n                console.log(err.code)\n                if (err.message.includes('timeout')) {\n                    setTimeout(pingServer, 1000)\n                }\n            })\n        },\n        [],\n    )\n\n    useEffect(() => {\n        pingServer()\n    }, [pingServer])\n    return (\n        <>\n            <NavBar />\n            {anime.length === 0 ? <LoadingShar height=\"calc( 100vh - 56px)\" /> :\n                <>\n                    <SearchSection onSuggest={(res) => { setSuggestions(res) }} />\n                    <Container>\n                        <h3 style={{ marginBottom: \"2rem\" }}>{suggestions.length === 0 ? \"Popular Shows\" : \"Search Results\"}</h3>\n                    </Container></>}\n            {suggestions.length === 0 && <AnimeGrid anime={anime} />}\n            {suggestions.length !== 0 && <AnimeGrid anime={suggestions} />}\n        </>\n    )\n}\n\nexport default BrowsePage\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Fade, Collapse } from 'react-bootstrap'\n\nfunction HomePage() {\n    const [aboutVisible, setAboutVisible] = useState(false)\n    return (\n        <div position=\"relative\">\n            <div style={{ position: \"absolute\", top: \"1rem\", right: \"1rem\" }}>\n                <Button\n                    onClick={() => setAboutVisible(state => !state)}\n                    aria-controls=\"fade-nav-buttons fade-description fade-git-link fade-subtitle\"\n                    aria-expanded={aboutVisible}\n                    variant=\"outline-light\"\n                    style={{ borderRadius: \"50%\" }}\n                >\n                    <i className={aboutVisible ? \"fa fa-home\" : \"fa fa-info-circle\"}></i>\n                </Button>\n            </div>\n\n            <img src={process.env.PUBLIC_URL+\"/AttackOnJojo.gif\"} style={{ position: \"absolute\", zIndex: \"-1\", width: \"100vw\", height: \"100vh\", objectFit: \"cover\" }} />\n\n            <div className=\"brand\" style={{ color: \"lightgray\", margin: \"auto\", position: \"absolute\", top: \"28%\", left: \"50%\", transform: \"translate(-50%, 0%)\", textAlign: \"center\" }}>\n                <h1 style={{ fontSize: \"min(13vw,100px)\" }}>AnimeRecSys</h1>\n                <Fade in={!aboutVisible}>\n                    <p id=\"fade-subtitle\">There couldn't be a better name...</p>\n                </Fade>\n                <Collapse in={aboutVisible}>\n                    <div id=\"fade-description\">\n                        <p>This project uses a <InlineLink href={\"https://arxiv.org/abs/1708.05031\"} text=\"collaborative filtering\" /> based recommender system, built using Tensorflow 2.0, on  <InlineLink href={\"https://www.kaggle.com/qvinhdo/myanimelist\"} text=\"this Kaggle\" /> dataset. The webapp is built using React, Express and Bull.</p>\n                    </div>\n                </Collapse>\n            </div>\n\n            <div style={{ position: \"absolute\", bottom: \"2rem\", left: \"50%\", transform: \"translate(-50%,0)\", display: \"inline-block\", textAlign: \"center\" }}>\n                <Collapse in={aboutVisible}>\n                    <div id=\"fade-git-link\">\n                        <a rel=\"noreferrer\" target=\"_blank\" className=\"btn btn-outline-light\" href=\"https://github.com/Prakhar314/AnimeRecSys\" style={{ margin: \"0.5rem\" }}><i className=\"fa fa-github\" /> View on Github</a>\n                    </div>\n                </Collapse>\n                <Collapse in={!aboutVisible}>\n                    <div id=\"fade-nav-buttons\">\n                        <Link className=\"btn btn-outline-light\" to=\"/browse\" style={{ margin: \"0.5rem\" }}>Browse Animes</Link>\n                        <Link className=\"btn btn-outline-light\" to=\"/recommend\" style={{ margin: \"0.5rem\" }}>Get Recommendations</Link>\n                    </div>\n                </Collapse>\n            </div>\n        </div>\n    )\n}\n\nfunction InlineLink({ href, text }) {\n    return (\n        <span className=\"inline-link\" onClick={() => window.open(href)}>\n            {text}\n        </span>\n    )\n}\n\n\nexport default HomePage\n","import React, { createContext, useReducer, useEffect } from 'react'\n\n\nconst initialState = {\n    userAnimeList: JSON.parse(localStorage.getItem('userAnimeList') || '[]'),\n    recsInSync: JSON.parse(localStorage.getItem('recsInSync') || 'false')\n};\n\nconst actionTypes = Object.freeze({\n    ADD_ANIME: Symbol('ADD_ANIME'),\n    REMOVE_ANIME: Symbol('REMOVE_ANIME'),\n    CLEAR: Symbol('CLEAR'),\n    SYNC: Symbol('SYNC')\n})\n\nconst store = createContext(initialState);\nconst { Provider } = store;\n\nconst StateProvider = ({ children }) => {\n\n    const [state, dispatch] = useReducer((state, action) => {\n        switch (action.type) {\n            case actionTypes.ADD_ANIME:\n                return {\n                    recsInSync: false,\n                    userAnimeList: [action.payload, ...state.userAnimeList.filter((item) => item.id !== action.payload.id)]\n                }\n\n            case actionTypes.REMOVE_ANIME:\n                return {\n                    recsInSync: false,\n                    userAnimeList: [...state.userAnimeList.filter((item) => item.id !== action.payload.id)]\n                }\n            case actionTypes.CLEAR:\n                return {\n                    recsInSync: false,\n                    userAnimeList: []\n                }\n            case actionTypes.SYNC:\n                return {\n                    ...state,\n                    recsInSync: true\n                }\n            default:\n                throw new Error();\n        };\n    }, initialState);\n\n    useEffect(() => {\n        console.log('setting a ' + JSON.stringify(state.userAnimeList))\n        localStorage.setItem('userAnimeList', JSON.stringify(state.userAnimeList))\n    }, [state.userAnimeList])\n\n    useEffect(() => {\n        console.log('setting b ' + JSON.stringify(state.recsInSync))\n        localStorage.setItem('recsInSync', JSON.stringify(state.recsInSync))\n    }, [state.recsInSync])\n\n    return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nexport { store, StateProvider, actionTypes }","import React from 'react'\nimport Chip from \"./Chip\"\n\nfunction getMPAA(mpaa) {\n    switch (mpaa) {\n        case 'R - 17+ (violence & profanity)':\n            return { text: 'R-17+', tooltip: \"Violence & Profanity\", color: \"#fc1303\" }\n        case 'PG-13 - Teens 13 or older':\n            return { text: 'PG-13', tooltip: \"Teens 13 or Older\", color: \"#e7f03c\" }\n        case 'PG - Children':\n            return { text: 'PG', tooltip: \"Children\", color: \"#31d65d\" }\n        case 'R+ - Mild Nudity':\n            return { text: 'R+', tooltip: \"Mild Nudity\", color: \"#fc1303\" }\n        case 'G - All Ages':\n            return { text: 'G', tooltip: \"All Ages\", color: \"#31d65d\" }\n        default:\n            return { text: mpaa }\n    }\n}\n\nfunction getGenre(genre) {\n    return (<>{genre.split(\",\").map((g) => <Chip text={g} color=\"#e1e3e3\" />)}</>)\n}\n\nfunction AnimeInfo({ mpaa_rating, score, genre }) {\n    return (\n        <>\n            <p style={{marginBottom:\"0.2rem\"}}><Chip {...getMPAA(mpaa_rating)} /> <Chip text={score} color=\"#46ebda\" /></p>\n            <p>{getGenre(genre)}</p>\n        </>\n    )\n}\n\nexport default AnimeInfo\n","import React from 'react'\n\nfunction CenterDiv({children}) {\n    return (\n        <div style={{ display: \"flex\", justifyContent: \"center\", height:\"100%\", alignItems:\"center\" }}>\n            {children}\n        </div>\n    )\n}\n\nexport default CenterDiv\n","import React, { useContext } from 'react'\n\nimport { Modal, Button } from 'react-bootstrap'\nimport ReactStars from 'react-rating-stars-component'\n\nimport { store, actionTypes } from '../store'\nimport CenterDiv from './CenterDiv'\n\nfunction EditAnimeModal({ anime, handleClose, show, title }) {\n\n    const {dispatch: globalDispatch } = useContext(store)\n\n    const updateAnime = () => {\n        handleClose()\n        globalDispatch({ type: actionTypes.ADD_ANIME, payload: anime })\n    }\n\n    const deleteAnime = () => {\n        handleClose()\n        globalDispatch({ type: actionTypes.REMOVE_ANIME, payload: anime })\n    }\n\n    return (\n        <Modal show={show} onHide={handleClose} id={\"edit-anime-modal\"}>\n            <Modal.Header closeButton>\n                <Modal.Title>{title||'Edit Rating'}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body style={{ textAlign: \"center\" }}>\n                {!anime.image_path && <CenterDiv><h3 style={{ fontWeight: 200 }}>Nothing Selected</h3></CenterDiv>}\n                {anime.image_path &&\n                    <>\n                        <img src={anime.image_path} alt={anime.title} style={{ width: \"80%\" }} />\n                        <h3 style={{ marginTop: \"1rem\" }}>{anime.title}</h3>\n                        <ReactStars\n                            classNames=\"mx-auto\"\n                            size={35}\n                            count={5}\n                            isHalf={true}\n                            onChange={newValue => {\n                                anime.score = newValue * 2\n                            }\n                            } />\n                    </>\n                }\n                {/* {JSON.stringify(anime)} */}\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" size=\"sm\" onClick={handleClose}>\n                    Close\n                </Button>\n                <Button variant=\"danger\" size=\"sm\" onClick={deleteAnime}>\n                    Remove\n                </Button>\n                <Button variant=\"primary\" size=\"sm\" onClick={updateAnime}>\n                    Save Changes\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default EditAnimeModal\n","import {\n    useParams\n} from \"react-router-dom\";\nimport React, { useState, useEffect, useMemo , useContext} from 'react'\nimport axios from 'axios'\nimport { Col, Row, Container, Button } from 'react-bootstrap'\n\nimport NavBar from \"./NavBar\"\nimport { store } from '../store'\nimport AnimeGrid from \"./AnimeGrid\"\nimport AnimeInfo from \"./AnimeInfo\"\nimport LoadingShar from \"./LoadingShar\"\nimport EditAnimeModal from \"./EditAnimeModal\"\n\nexport default function AnimePage() {\n    // We can use the `useParams` hook here to access\n    // the dynamic pieces of the URL.\n    const defaultImages = useMemo(()=>{return{ cover: process.env.PUBLIC_URL+'/coverPlaceholder.png', banner: process.env.PUBLIC_URL+'/bannerPlaceholder.png' }},[])\n    const { id } = useParams();\n    const [anime, setAnime] = useState({})\n    const [images, setImages] = useState(defaultImages)\n    const [width, setWidth] = React.useState(window.innerWidth)\n    const [showAnimeModal, setShowAnimeModal] = useState(false)\n    const {state:globalState } = useContext(store)\n\n    const userScore = (globalState.userAnimeList.filter((x)=>x.id===id)[0]||{score:null}).score\n\n    React.useEffect(() => {\n        const handleWindowResize = () => setWidth(window.innerWidth)\n        window.addEventListener(\"resize\", handleWindowResize)\n        return () => window.removeEventListener(\"resize\", handleWindowResize)\n    }, [])\n\n    useEffect(() => {\n        setImages(defaultImages)\n        axios.get(`https://animerecsys.glitch.me/anime/${id}/18`).then((val) => {\n            // console.log(val.data.details);\n            setAnime(val.data)\n        })\n        // This is the GraphQL query\n        const query = `\n            query ($id: Int) {\n                Media(idMal: $id, type: ANIME) {\n                    coverImage {\n                    large\n                    }\n                    bannerImage\n                }\n            }\n            `;\n\n        // These variables are optional, leave empty for now\n        const variables = { \"id\": id };\n        axios.post('https://graphql.anilist.co', {\n            query,\n            variables\n        }).then((result) => {\n            setImages({\n                banner: result.data.data.Media.bannerImage || defaultImages.banner,\n                cover: result.data.data.Media.coverImage.large || defaultImages.cover\n            });\n        });\n    }, [id,defaultImages])\n    return (\n        <>\n            <NavBar />\n            {anime.details &&\n                <div>\n                    <img src={images.banner} alt={anime.details.title} style={{ height: \"min(500px,60vw)\", width: \"100%\", objectFit: \"cover\" }}></img>\n                    <Container>\n                        <Row>\n                            <Col xs={12} md={4} style={{ paddingRight: width > 768 ? \"0px\" : \"15px\", textAlign: width > 768 ? \"left\" : \"center\" }}>\n                                <div style={{ display: \"flex\" }}>\n                                    <img src={images.cover} alt={anime.details.title} style={{ marginTop: \"-120px\", boxShadow: \"0px 0px 68px -19px black\", marginLeft: width > 768 ? \"unset\" : \"auto\", marginRight: width > 768 ? \"unset\" : \"auto\" }}></img>\n                                </div>\n                                <h5 style={{ color: \"rgb(108, 117, 125)\", fontWeight: \"300\", marginTop: \"2rem\" }}>{anime.details.title_japanese}, {anime.details.title_english}</h5>\n                                <AnimeInfo {...anime.details} />\n                            </Col>\n                            <Col xs={12} md={8} style={{ marginLeft: width > 768 ? \"15px\" : \"0px\", marginRight: \"-15px\" }}>\n                                <h2 style={{ marginTop: \"2rem\", marginBottom: \"1rem\", textAlign: width > 768 ? \"left\" : \"center\" }}>{anime.details.title}</h2>\n                                <p>{anime.details.synopsis}</p>\n                                <div className=\"text-center text-sm-left\">\n                                    <Button variant=\"outline-dark m-1\" onClick={()=>setShowAnimeModal(true)}>\n                                        {userScore!=null?`Rated ${userScore}`:'Rate this Anime'}\n                                    </Button>\n                                    <a rel=\"noreferrer\" target=\"_blank\" href={`https://www.myanimelist.net/anime/${id}`} className=\"btn btn-outline-dark m-1\">Open in MyAnimeList</a>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Container>\n                    <AnimeGrid anime={anime.recommendations}>\n                        <h3 style={{ marginTop: \"2rem\", marginBottom: \"1rem\", textAlign: width > 768 ? \"left\" : \"center\" }}>Recommendations</h3>\n                    </AnimeGrid>\n                    <EditAnimeModal anime={{id:anime.details.id,title:anime.details.title,image_path:images.cover}} handleClose={()=>setShowAnimeModal(false)} show={showAnimeModal} title={\"Add Rating\"}/>\n                </div>}\n            {anime.details == null && <LoadingShar />}\n        </>\n    );\n}","import React, { useState, useCallback, useRef, useEffect, useContext } from 'react'\n\nimport { Modal, Button, Row, Col, InputGroup, FormControl, Spinner } from 'react-bootstrap'\nimport debounce from 'lodash.debounce'\nimport axios from 'axios'\nimport ReactStars from \"react-rating-stars-component\"\n\nimport { store, actionTypes } from '../store'\nimport CenterDiv from './CenterDiv'\n\nfunction AddAnimeModal({ show, handleClose }) {\n\n    const { state: globalState, dispatch: globalDispatch } = useContext(store)\n\n    function handleAdd(item) {\n        globalDispatch({ type: actionTypes.ADD_ANIME, payload: { ...item } })\n    }\n\n    const [state, setState] = useState({\n        loading: false,\n        value: '',\n        currentAnime: {},\n        suggestion: []\n    })\n    const valueRef = useRef(state.value)\n\n    useEffect(() => {\n        valueRef.current = state.value\n    }, [state.value])\n\n    const loadSuggestions = (query) => {\n        console.log(\"fetching \" + query)\n        setState(prevstate => {\n            return { ...prevstate, loading: true }\n        })\n        axios({\n            method: 'post',\n            url: `https://animerecsys.glitch.me/search/${query}/5`,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then((res) => {\n            console.log(\"fetching \" + query + \" \" + valueRef.current)\n            if (query === valueRef.current) {\n                setState(prevstate => {\n                    return { ...prevstate, loading: false, suggestion: res.data }\n                })\n                // console.log(res.data)\n            } else { // Ignore suggestions if input value changed\n                setState(prevstate => {\n                    return { ...prevstate, loading: true }\n                })\n            }\n        })\n    }\n\n    const onChange = (event) => {\n        setState(prevstate => {\n            return { ...prevstate, value: event.target.value, currentAnime: {} }\n        })\n        fetchSuggestions(event.target.value)\n    };\n\n    const fetchSuggestions = (value) => {\n        debouncedLoadSuggestions(value)\n    };\n\n    const setCurrentAnime = (anime) => {\n        setState(prevstate => {\n            return { ...prevstate, currentAnime: anime }\n        })\n    }\n\n    const clearInput = () => {\n        setState(prevstate => {\n            return { ...prevstate, value: '' ,loading:false}\n        })\n    }\n\n    const debouncedLoadSuggestions = useCallback(debounce(loadSuggestions, 1000), [])\n\n    const searchInGlobal = globalState.userAnimeList.filter((i) => i.id === state.currentAnime.id)\n    const animeAlreadyRated = searchInGlobal.length !== 0 && (state.currentAnime.score == null || state.currentAnime.score === searchInGlobal[0].score)\n\n    return (\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Rate Anime</Modal.Title>\n            </Modal.Header>\n            <Modal.Body style={{ paddingLeft: \"1rem\", paddingRight: \"1rem\", paddingBottom: \"0px\", paddingTop: \"0px\" }}>\n                <Row style={{ minHeight: \"300px\" }}>\n                    <Col style={{ backgroundColor: \"lightgray\", paddingTop: \"1rem\" }}>\n                        <InputGroup size=\"sm\">\n                            <FormControl\n                                placeholder=\"Jojo\"\n                                aria-label=\"Search...\"\n                                aria-describedby=\"basic-addon2\"\n                                onChange={onChange}\n                                value={state.value}\n                            />\n                            <InputGroup.Append>\n                                <Button variant=\"outline-secondary\" onClick={() => clearInput()}> X </Button>\n                            </InputGroup.Append>\n                        </InputGroup>\n                        {state.loading &&\n                            <div style={{ display: \"flex\", height: \"80%\" }}>\n                                <Spinner animation=\"grow\" style={{ margin: \"auto\" }} />\n                            </div>}\n                        <div style={{ paddingTop: \"1rem\", paddingBottom: \"1rem\" }}>\n                            {\n                                !state.loading && state.suggestion.length !== 0 &&\n                                state.suggestion.map((a, i) =>\n                                    <h6 key={a.id}\n                                        style={{\n                                            padding: \"10px\",\n                                            borderTop: i === 0 ? \"1px solid gray\" : \"none\",\n                                            borderBottom: \"1px solid gray\",\n                                            marginBottom: \"5px\",\n                                            cursor: \"pointer\"\n                                        }}\n                                        onClick={() => setCurrentAnime(a)}\n                                    >\n                                        {a.title}\n                                    </h6>)\n                            }\n                            {\n                                !state.loading && state.suggestion.length === 0 && <CenterDiv><h6 style={{ fontWeight: 200 }}>Suggestions will show up here</h6></CenterDiv>\n                            }\n                        </div>\n                    </Col>\n                    <Col style={{ textAlign: \"center\" }}>\n                        {!state.currentAnime.image_path && <CenterDiv><h3 style={{ fontWeight: 200 }}>Nothing Selected</h3></CenterDiv>}\n                        {state.currentAnime.image_path &&\n                            <>\n                                <img src={state.currentAnime.image_path} alt={state.currentAnime.title} style={{ width: \"80%\" }} />\n                                <h3 style={{ marginTop: \"1rem\" }}>{state.currentAnime.title}</h3>\n                                <ReactStars\n                                    classNames=\"mx-auto\"\n                                    size={35}\n                                    count={5}\n                                    isHalf={true}\n                                    onChange={newValue => {\n                                        state.currentAnime.score = newValue * 2\n                                        setState(prevstate => { return { ...prevstate } })\n                                    }\n                                    } />\n                            </>\n                        }\n                    </Col>\n                </Row>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" size=\"sm\" onClick={handleClose}>\n                    Close\n                </Button>\n                <Button variant=\"primary\" size=\"sm\" onClick={() => handleAdd(state.currentAnime)} disabled={state.currentAnime.score == null || animeAlreadyRated}>\n                    {animeAlreadyRated ? `Rated ${searchInGlobal[0].score}` : 'Save Rating'}\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default AddAnimeModal\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nfunction OverlayedImage({ id, title, image, score }) {\n    return (\n        <Card style={{ border: \"none\", margin: \"0.5rem\", backgroundColor: \"transparent\", cursor:\"pointer\" }}>\n\n            <Card.Img variant=\"top\" src={image} style={{ objectFit: \"cover\", height: \"30vh\", borderRadius: \"10px\", display: \"block\" }} />\n            <div style={{\n                backgroundColor: \"#000000a6\",\n                color: \"white\",\n                fontWeight: 700,\n                fontSize: \"smaller\",\n                position: \"absolute\", top: 0, left: 0, right: 0, bottom: 0,\n                borderRadius: \"10px\",\n                textAlign: \"center\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"flex-end\",\n                paddingBottom: \"1rem\"\n            }}>\n                <h1 style={{\n                    position: \"absolute\", top: \"50%\",\n                    fontWeight: 800,\n                    transform: \"translate( 0 , -50% )\"\n                }}>\n                    {score || 10}\n                </h1>\n                {title.slice(0,50)}\n            </div>\n        </Card>\n    )\n}\n\nexport default OverlayedImage\n","import React, { useState, useContext } from 'react'\n\nimport ScrollMenu from 'react-horizontal-scrolling-menu'\nimport { Container, Button } from 'react-bootstrap'\nimport debounce from 'lodash.debounce'\n\nimport { store, actionTypes } from '../store'\nimport OverlayedImage from './OverlayedImage'\nimport EditAnimeModal from './EditAnimeModal'\n\nfunction UserAnimeList({ onAddAnime }) {\n\n    const { state, dispatch } = useContext(store)\n\n    const onClearAnime = () => {\n        dispatch({ type: actionTypes.CLEAR })\n    }\n\n    const [selected, setSelected] = useState({\n        key: 0,\n        showModal: false\n    })\n\n    return (\n        <div style={{ minHeight: \"45vh\", backgroundColor: \"lightgrey\", paddingTop: \"1rem\" }}>\n            <Container style={{ display: \"flex\" }}>\n                <h3 style={{ marginLeft: \"1rem\", fontWeight: 300 }}>\n                    Your List({state.userAnimeList.length})\n                </h3>\n                <div style={{ marginLeft: \"auto\" }}>\n                    <Button\n                        variant=\"outline-dark\"\n                        style={{ marginRight: \"5px\" }}\n                        onClick={onAddAnime}>\n                        Add Anime\n                    </Button>\n                    <Button\n                        variant=\"outline-dark\"\n                        style={{ marginLeft: \"5px\" }}\n                        onClick={onClearAnime}>\n                        Clear All\n                    </Button>\n                </div>\n            </Container>\n            <Container>\n                <ScrollMenu\n                    arrowLeft={<div style={{ fontSize: \"30px\", margin: \"1rem\", fontWeight: 700}}>{\" < \"}</div>}\n                    arrowRight={<div style={{ fontSize: \"30px\", margin: \"1rem\", fontWeight: 700}}>{\" > \"}</div>}\n                    arrowDisabledClass={\"d-none\"}\n                    hideSingleArrow={true}\n                    data={\n                        state.userAnimeList.map((a, i) => (\n                            <div key={i}\n                                className=\"menu-item\"\n                                style={{ display: \"grid\", maxWidth: \"21vh\" }}>\n                                <OverlayedImage id={a.id} image={a.image_path} title={a.title} score={a.score} />\n                            </div>\n                        ))\n\n                    }\n                    selected={selected.key}\n                    onSelect={(key) => {\n                        setSelected({ key: key, showModal: true })\n                    }}\n                />\n            </Container>\n            {selected.showModal &&\n                <EditAnimeModal anime={{ ...state.userAnimeList[selected.key] }} show={selected.showModal} handleClose={() => setSelected(prevState => { return { ...prevState, showModal: false } })} />\n            }\n        </div>\n    )\n}\n\nexport default UserAnimeList\n","import { React, useReducer, useContext, useEffect } from 'react'\n\nimport { Container, Button, ProgressBar, Spinner } from 'react-bootstrap'\nimport axios from 'axios'\n\nimport { store, actionTypes } from '../store'\nimport AnimeGrid from './AnimeGrid'\n\nconst initialState = {\n    loading: false,\n    recommendations: [],\n    error: false,\n    errorMessage: '',\n    progress: 0,\n    queue: 0\n};\n\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case 'REQ_SENT':\n            return {\n                loading: true,\n                recommendations: [],\n                error: false,\n                errorMessage: '',\n                progress: 0,\n                queue: action.payload.numWait || (-2) + 1\n            }\n        case 'PROGRESS':\n            return {\n                ...state,\n                progress: action.payload.progress\n            }\n        case 'FINISH':\n            return {\n                loading: false,\n                recommendations: action.payload.result,\n                error: false,\n                errorMessage: '',\n                progress: 0,\n                queue: 0,\n            }\n        case 'ERROR':\n            return {\n                loading: false,\n                recommendations: [],\n                error: true,\n                errorMessage: action.payload.error,\n                progress: 0,\n                queue: 0\n            }\n        default:\n            return initialState\n    }\n}\n\nfunction UserRecs() {\n    const [state, dispatch] = useReducer(reducer, initialState)\n    const { state: globalState, dispatch: globalDispatch } = useContext(store)\n    const userAnimeList = globalState.userAnimeList\n\n    function getRecs() {\n        dispatch({ type: 'REQ_SENT', payload: {} })\n        axios({\n            method: 'post',\n            url: 'https://animerecsys.glitch.me/recommendations/18',\n            data: {\n                \"animes\": [...userAnimeList.map((x) => x.id)],\n                \"scores\": [...userAnimeList.map((x) => x.score)]\n            },\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            withCredentials: true,\n        }).then((res) => {\n            dispatch({ type: 'REQ_SENT', payload: res.data })\n            globalDispatch({ type: actionTypes.SYNC })\n            setTimeout(() => {\n                pingForProgress(0)\n            }, 5000)\n        }).catch((err) => {\n            if (err.response.data.err === 'ACTIVE_JOB') {\n                pingForProgress(0)\n                return\n            }\n            dispatch({ type: 'ERROR', payload: { error: err.response.data.error } })\n        })\n    }\n\n    function pingForProgress(tries) {\n        if (tries > 30) {\n            dispatch({ type: 'ERROR', payload: { error: \"Job didn't finish in time\" } })\n        }\n        axios.get('https://animerecsys.glitch.me/job/',\n            { withCredentials: true }).then((res) => {\n                if (res.data.status === 'failed') {\n                    dispatch({ type: 'ERROR', payload: { error: 'Failed' } })\n                    return\n                }\n                if (res.data.result != null) {\n                    dispatch({ type: 'FINISH', payload: { result: res.data.result } })\n                }\n                else {\n                    dispatch({ type: 'PROGRESS', payload: { progress: res.data.progress } })\n                    setTimeout(() => {\n                        pingForProgress(tries + 1)\n                    }, 5000);\n                }\n            }).catch((err) => {\n                dispatch({ type: 'ERROR', payload: { error: err.response.data.error } })\n            })\n    }\n\n    useEffect(() => {\n        if (globalState.recsInSync) {\n            dispatch({ type: 'REQ_SENT', payload: {} })\n            axios.get('https://animerecsys.glitch.me/job/', {\n                withCredentials: true,\n            }).then((res) => {\n                if (res.data.status === 'failed') {\n                    dispatch({ type: 'reset' })\n                    return\n                }\n                if (res.data.result != null) {\n                    dispatch({ type: 'FINISH', payload: { result: res.data.result } })\n                }\n                else {\n                    dispatch({ type: 'PROGRESS', payload: { progress: res.data.progress } })\n                    setTimeout(() => {\n                        pingForProgress(0)\n                    }, 5000);\n                }\n            }).catch((err) => {\n                dispatch({ type: 'reset' })\n                console.log(err)\n            })\n        }\n    }, [])\n\n    return <div style={{ minHeight: \"45vh\", position: \"relative\", paddingBottom: \"3rem\" }}>\n        <div style={{ textAlign: \"center\", position: \"absolute\", left: \"50%\", top: \"50%\", transform: \"translate(-50% , -50%)\" }}>\n            {state.loading && (state.progress > 0 ?\n                <ProgressBar variant=\"info\" now={state.progress} animated style={{ minWidth: \"200px\" }} /> :\n                <Spinner animation=\"grow\" variant=\"info\" />)}\n            {state.loading && (state.queue > 0 &&\n                <h6 className=\"text-muted\" style={{ marginTop: \"1rem\" }}>Wait Time...{state.queue * 30}s</h6>\n            )}\n            {state.error &&\n                <h6 className=\"text-danger\">{state.errorMessage}</h6>\n            }\n        </div>\n        {state.recommendations.length !== 0 &&\n            <AnimeGrid anime={state.recommendations} style={{ margin: \"3rem\" }}>\n                <Container fluid>\n                    <h3 style={{ marginBottom: \"2rem\", marginTop: \"2rem\" }}>{\"Recommended\"}</h3>\n                </Container>\n            </AnimeGrid>}\n        {!state.loading &&\n            <Button variant=\"outline-dark\" onClick={getRecs} disabled={userAnimeList.length < 10} style={{ position: \"absolute\", left: \"50%\", transform: \"translate(-50%,0)\", bottom: \"1rem\" }}>\n                {userAnimeList.length < 10 ? \"Add \" + (10 - userAnimeList.length) + \" more\" : \"Get Recommendations\"}\n            </Button>}\n    </div>\n}\n\nexport default UserRecs\n","import {React,useState} from 'react'\n\nimport NavBar from './NavBar'\nimport AddAnimeModal from './AddAnimeModal'\nimport UserAnimeList from './UserAnimeList'\nimport UserRecs from './UserRecs'\n\nfunction RecPage() {\n    const [addAnimeModal,setAddAnimeModal] = useState(false)\n\n    return (\n        <>\n            <NavBar />\n            <UserAnimeList onAddAnime={()=>setAddAnimeModal(true)}/>\n            <AddAnimeModal show={addAnimeModal} handleClose={()=>setAddAnimeModal(false)}/>\n            <UserRecs/>\n        </>\n    )\n}\n\nexport default RecPage\n","import './App.css';\nimport {\n    HashRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport BrowsePage from \"./components/BrowsePage\";\nimport HomePage from \"./components/HomePage\";\nimport AnimePage from \"./components/AnimePage\";\nimport RecPage from \"./components/RecPage\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router >\n                <Switch>\n                    <Route path=\"/anime/:id\" children={<AnimePage />} />\n                    <Route path=\"/recommend\" children={<RecPage />} />\n                    <Route path=\"/browse\" children={<BrowsePage />} />\n                    <Route path=\"/\" children={<HomePage />} />\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { StateProvider } from './store.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n  <StateProvider>\n    <App />\n  </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\nconst popularTags=['Adventure',\n 'Drama',\n 'School',\n 'Sci-Fi',\n 'Romance',\n 'Shounen',\n 'Fantasy',\n 'Comedy',\n 'Comedy',\n 'Action']\n\nconst tags =['Action',\n 'Adventure',\n 'Cars',\n 'Comedy',\n 'Dementia',\n 'Demons',\n 'Drama',\n 'Ecchi',\n 'Fantasy',\n 'Game',\n 'Harem',\n 'Historical',\n 'Horror',\n 'Josei',\n 'Kids',\n 'Magic',\n 'Martial Arts',\n 'Mecha',\n 'Military',\n 'Music',\n 'Mystery',\n 'Parody',\n 'Police',\n 'Psychological',\n 'Romance',\n 'Samurai',\n 'School',\n 'Sci-Fi',\n 'Seinen',\n 'Shoujo',\n 'Shoujo Ai',\n 'Shounen',\n 'Shounen Ai',\n 'Slice of Life',\n 'Space',\n 'Sports',\n 'Super Power',\n 'Supernatural',\n 'Thriller',\n 'Vampire']\n exports.tags = tags\n exports.popularTags = popularTags"],"sourceRoot":""}